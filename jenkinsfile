pipeline {
    agent any

    environment {
        JAVA_HOME = '/var/lib/jenkins/jdk-17'
        PATH = "$JAVA_HOME/bin:$PATH"
    }

    tools {
        maven 'maven'
        dockerTool 'docker'
    }

    stages {
        /* Commenting out the Build Maven stage
        stage('Build Maven') {
            steps {
                script {
                    env.JAVA_HOME = '/var/lib/jenkins/jdk-17'
                    env.PATH = "$JAVA_HOME/bin:$PATH"
                }
                checkout scm
                sh 'mvn clean install -U'
            }
        }
        */

        stage('Docker Build') {
            steps {
                script {
                    // Build Docker image
                    def dockerImageName = "arijknani/springbootapp"
                    def dockerBuildStatus = sh(script: "docker build -t $dockerImageName .", returnStatus: true)
                    if (dockerBuildStatus == 0) {
                        echo 'Docker build successful!'
                    } else {
                        error 'Docker build failed!'
                    }
                }
            }
        }

        stage('Docker Login') {
            steps {
                script {
                    // Docker login
                    withCredentials([usernamePassword(credentialsId: 'dockerhub', usernameVariable: 'DOCKER_HUB_USERNAME', passwordVariable: 'DOCKER_HUB_PASSWORD')]) {
                        def dockerLoginStatus = sh(script: "docker login -u \$DOCKER_HUB_USERNAME -p \$DOCKER_HUB_PASSWORD docker.io", returnStatus: true)
                        if (dockerLoginStatus == 0) {
                            echo 'Docker login successful!'
                        } else {
                            error 'Docker login failed!'
                        }
                    }
                }
            }
        }

        stage('Docker Push') {
            steps {
                script {
                    // Push Docker image
                    
                    docker.withRegistry('https://hub.docker.com/v2/', 'dockerhub') {
                        docker.image("arijknani/springbootapp").push()

                        
                    }
                }
            }
        }

        stage('Pull') {
            steps {
                script {
                    // Pull the Docker image
                    docker.withRegistry('https://hub.docker.com/v2/', 'dockerhub') {
                        docker.image("arijknani/springbootapp").pull()
                    }
                }
            }
        }

        stage('Test') {
            steps {
                script {
                    sh './mvnw test'
                }
            }
        }
    }
}
